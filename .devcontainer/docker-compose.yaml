---
version: "3"

x-frontend-common: &frontend-common
  image: "node:14"
  entrypoint: ["/bin/bash", "-c"]
  working_dir: "/main"
  volumes:
    - "../frontend:/main"
    - "frontend_nodemodules:/main/node_modules"

services:
  workspace:
    build:
      dockerfile: "./Dockerfile.workspace"
    working_dir: "/workspace"
    volumes:
      - "../:/workspace"
      - "~/.gitconfig:/root/.gitconfig:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: "tail -F /dev/null"
  ingress:
    image: "traefik:v2.5"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
  frontend-install:
    << : *frontend-common
    command: ["([ -f node_modules/done ] || npm install) && touch node_modules/done"]
    deploy:
      restart_policy:
        condition: "on-failure"
  frontend:
    << : *frontend-common
    depends_on:
      - "frontend-install"
    command: ["[ -f node_modules/done ] && yarn start"]
    deploy:
      restart_policy:
        condition: "always"
    expose:
      - 3000
    labels:
      traefik.enable: true
      traefik.http.routers.frontend.entrypoints: web
      traefik.http.routers.frontend.rule: Host(`www.drmr.localhost`) && PathPrefix(`/`)
      traefik.http.routers.frontend.middlewares: frontend
      traefik.http.middlewares.frontend.stripprefix.prefixes: "/"
      traefik.http.middlewares.frontend.stripprefix.forceSlash: false
  backend:
    image: rust:1.56.1
    command: cargo run
    deploy:
      restart_policy:
        condition: "on-failure"
    working_dir: "/main"
    volumes:
      - "../backend:/main"
      - "backend_cargo:/root/.cargo"
      - "backend_target:/main/target"
    expose:
      - 8080
    labels:
      traefik.enable: true
      traefik.http.routers.backend.entrypoints: web
      traefik.http.routers.backend.rule: Host(`www.drmr.localhost`) && PathPrefix(`/api`)
      traefik.http.routers.backend.middlewares: backend
      traefik.http.middlewares.backend.stripprefix.prefixes: "/api"
      traefik.http.middlewares.backend.stripprefix.forceSlash: false
  mongo:
    image: mongo:5.0.3
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    expose:
      - 27017
  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    expose:
      - 8081
    labels:
      traefik.enable: true
      traefik.http.routers.mongo-express.entrypoints: web
      traefik.http.routers.mongo-express.rule: Host(`mongo.drmr.localhost`)
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
volumes:
  frontend_nodemodules:
  backend_cargo:
  backend_target:
